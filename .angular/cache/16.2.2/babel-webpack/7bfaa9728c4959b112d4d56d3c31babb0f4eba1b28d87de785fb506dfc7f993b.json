{"ast":null,"code":"import _asyncToGenerator from \"/Users/chris/workspace/background-geolocation/cordova/SampleApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n////\n// NOTE:  normally you will simply import from \"cordova-background-geolocation-lt\" or \"cordova-background-geolocation\"\n// This is done only for convenience in the SampleApp for easily switching between public / private version of the plugin\n//\nimport BackgroundGeolocation from \"../../../cordova-background-geolocation\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GeofencePage_ion_select_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1, \" meters \");\n  }\n}\nlet GeofencePage = /*#__PURE__*/(() => {\n  var _class;\n  class GeofencePage {\n    constructor(alertCtrl, navParams, modalCtrl) {\n      this.alertCtrl = alertCtrl;\n      this.navParams = navParams;\n      this.modalCtrl = modalCtrl;\n      this.bgService = this.navParams.get('bgService');\n      this.identifier = '';\n      this.radius = '200';\n      this.latitude = this.navParams.get('latitude');\n      this.longitude = this.navParams.get('longitude');\n      this.notifyOnEntry = true;\n      this.notifyOnExit = true;\n      this.notifyOnDwell = false;\n      this.radiusOptions = ['100', '150', '200', '500', '1000', '5000', '10000'];\n    }\n    ngOnInit() {}\n    ionViewDidLoad() {\n      console.log('ionViewDidLoad GeofencePage');\n    }\n    onClickCancel() {\n      this.modalCtrl.dismiss();\n    }\n    onClickSubmit() {\n      let radius = parseInt(this.radius, 10);\n      BackgroundGeolocation.addGeofence({\n        identifier: this.identifier,\n        radius: radius,\n        latitude: this.latitude,\n        longitude: this.longitude,\n        notifyOnEntry: this.notifyOnEntry,\n        notifyOnExit: this.notifyOnExit,\n        notifyOnDwell: this.notifyOnDwell,\n        loiteringDelay: this.loiteringDelay,\n        extras: {\n          radius: radius,\n          center: {\n            latitude: this.latitude,\n            longitude: this.longitude\n          }\n        }\n      }).then(identifier => {\n        this.bgService.playSound('ADD_GEOFENCE');\n        this.modalCtrl.dismiss();\n      }).catch(error => {\n        this.alert('Error', error);\n      });\n    }\n    alert(title, message) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const alert = yield _this.alertCtrl.create({\n          header: title,\n          message: message,\n          buttons: ['Dismiss']\n        });\n        alert.present();\n      })();\n    }\n  }\n  _class = GeofencePage;\n  _class.ɵfac = function GeofencePage_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i1.NavParams), i0.ɵɵdirectiveInject(i1.ModalController));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-geofence\"]],\n    decls: 37,\n    vars: 7,\n    consts: [[\"color\", \"tertiary\", \"mode\", \"ios\"], [\"slot\", \"start\"], [\"ion-button\", \"\", 3, \"click\"], [\"mode\", \"ios\"], [\"slot\", \"end\"], [\"fill\", \"outline\", \"ion-text\", \"\", \"color\", \"dark\", 3, \"click\"], [\"padding\", \"\"], [\"color\", \"primary\"], [\"placeholder\", \"Geofence identifier\", 3, \"ngModel\", \"ngModelChange\"], [\"multiple\", \"false\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"200\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Delay before DWELL\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"200\", 3, \"value\"]],\n    template: function GeofencePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function GeofencePage_Template_ion_button_click_3_listener() {\n          return ctx.onClickCancel();\n        });\n        i0.ɵɵtext(4, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-title\", 3);\n        i0.ɵɵtext(6, \"Geofence\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 4)(8, \"ion-button\", 5);\n        i0.ɵɵlistener(\"click\", function GeofencePage_Template_ion_button_click_8_listener() {\n          return ctx.onClickSubmit();\n        });\n        i0.ɵɵtext(9, \" Save \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"ion-content\", 6)(11, \"ion-list\")(12, \"ion-item\")(13, \"ion-label\", 7);\n        i0.ɵɵtext(14, \"Identifier\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_input_ngModelChange_15_listener($event) {\n          return ctx.identifier = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"ion-item\")(17, \"ion-label\", 7);\n        i0.ɵɵtext(18, \"radius\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_select_ngModelChange_19_listener($event) {\n          return ctx.radius = $event;\n        });\n        i0.ɵɵtemplate(20, GeofencePage_ion_select_option_20_Template, 2, 2, \"ion-select-option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"ion-item\")(22, \"ion-label\", 7);\n        i0.ɵɵtext(23, \"notifyOnEntry\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-checkbox\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_checkbox_ngModelChange_24_listener($event) {\n          return ctx.notifyOnEntry = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"ion-item\")(26, \"ion-label\", 7);\n        i0.ɵɵtext(27, \"notifyOnExit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"ion-checkbox\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_checkbox_ngModelChange_28_listener($event) {\n          return ctx.notifyOnExit = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"ion-item\")(30, \"ion-label\", 7);\n        i0.ɵɵtext(31, \"notifyOnDwell\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"ion-checkbox\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_checkbox_ngModelChange_32_listener($event) {\n          return ctx.notifyOnDwell = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"ion-item\")(34, \"ion-label\", 7);\n        i0.ɵɵtext(35, \"loiteringDelay(ms)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ion-input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function GeofencePage_Template_ion_input_ngModelChange_36_listener($event) {\n          return ctx.loiteringDelay = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.identifier);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.radius);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.radiusOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.notifyOnEntry);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.notifyOnExit);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.notifyOnDwell);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.loiteringDelay);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i1.IonButton, i1.IonButtons, i1.IonCheckbox, i1.IonContent, i1.IonHeader, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonSelect, i1.IonSelectOption, i1.IonTitle, i1.IonToolbar, i1.BooleanValueAccessor, i1.NumericValueAccessor, i1.SelectValueAccessor, i1.TextValueAccessor]\n  });\n  return GeofencePage;\n})();\nexport { GeofencePage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}