{"ast":null,"code":"import _asyncToGenerator from \"/Users/chris/workspace/background-geolocation/cordova/SampleApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PreloadAllModules, RouterModule, NavigationEnd } from '@angular/router';\nimport { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nconst LocalStorage = window.localStorage;\nconst routes = [{\n  path: 'home',\n  loadChildren: () => import('./home/home.module').then(m => m.HomePageModule)\n}, {\n  path: 'hello-world',\n  loadChildren: () => import('./hello-world/hello-world.module').then(m => m.HelloWorldPageModule)\n}, {\n  path: 'advanced',\n  loadChildren: () => import('./advanced/advanced.module').then(m => m.AdvancedPageModule)\n}];\nlet AppRoutingModule = /*#__PURE__*/(() => {\n  var _class;\n  class AppRoutingModule {\n    constructor(router, loadingCtrl) {\n      var _ref;\n      this.init(router, loadingCtrl);\n      router.events.subscribe(function (_x) {\n        return (_ref = _ref || _asyncToGenerator(function* (event) {\n          if (!(event instanceof NavigationEnd)) return;\n          const root = event.url.substring(1, event.url.length);\n          if (root.length > 0) {\n            LocalStorage.setItem('page', root);\n          }\n        })).apply(this, arguments);\n      });\n    }\n    init(router, loadingCtrl) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.loadGoogleMaps(loadingCtrl);\n        // Navigate to current App (or /home).\n        const page = LocalStorage.getItem('page');\n        const orgname = LocalStorage.getItem('orgname');\n        const username = LocalStorage.getItem('username');\n        const isRegistered = orgname !== null && username !== null;\n        if (page && isRegistered) {\n          router.navigate(['/' + page]);\n        } else {\n          router.navigate(['/home']);\n        }\n      })();\n    }\n    /// Before rendering the App, first load the Google Maps Javascript SDK\n    /// This is a bit of a hack using the old Javascript Maps SDK.  Would be much better\n    /// to use a native Maps implementation.\n    loadGoogleMaps(loadingCtrl) {\n      return _asyncToGenerator(function* () {\n        var _ref2;\n        return new Promise(function (_x2, _x3) {\n          return (_ref2 = _ref2 || _asyncToGenerator(function* (resolve, reject) {\n            if (typeof google === 'object') {\n              // Already loaded?  Good to go!\n              return resolve();\n            }\n            const loading = yield loadingCtrl.create({\n              cssClass: 'my-custom-class',\n              message: 'Loading...',\n              duration: 10000\n            });\n            yield loading.present();\n            // Allow up to 10s to load Google Maps Javascript SDK before bailing out and letting\n            // the react app render itself.\n            const timeout = setTimeout(() => {\n              console.warn('Failed to load Google Maps Javascript SDK within 10s');\n              loading.dismiss();\n              resolve();\n            }, 10000);\n            // Append Google Maps <script> tag directly to the dom and wait for the onload signal\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${environment.GOOGLE_MAP_API_KEY}`;\n            script.async = true;\n            script.onload = () => {\n              loading.dismiss();\n              clearTimeout(timeout);\n              console.log('Loaded Google Maps Javascript SDK');\n              resolve();\n            };\n            document.body.appendChild(script);\n          })).apply(this, arguments);\n        });\n      })();\n    }\n  }\n  _class = AppRoutingModule;\n  _class.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoadingController));\n  };\n  _class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: _class\n  });\n  _class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules\n    }), RouterModule]\n  });\n  return AppRoutingModule;\n})();\nexport { AppRoutingModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}