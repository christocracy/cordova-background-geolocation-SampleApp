{"ast":null,"code":"import _asyncToGenerator from \"/Users/chris/workspace/background-geolocation/cordova/SampleApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport BackgroundGeolocation from \"../../cordova-background-geolocation\";\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/forms\";\nconst LocalStorage = window.localStorage;\n// Only allow alpha-numeric usernames with '-' and '_'\nconst USERNAME_VALIDATOR = /^[a-zA-Z0-9_-]*$/;\nlet RegistrationPage = /*#__PURE__*/(() => {\n  var _class;\n  class RegistrationPage {\n    constructor(modalController, navParams, toastController, platform) {\n      this.modalController = modalController;\n      this.navParams = navParams;\n      this.toastController = toastController;\n      this.platform = platform;\n      this.init();\n    }\n    init() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let deviceInfo = yield BackgroundGeolocation.getDeviceInfo();\n        _this.devicename = deviceInfo.manufacturer + ' ' + deviceInfo.model;\n        _this.url = environment.TRACKER_HOST;\n      })();\n    }\n    ngOnInit() {}\n    onClickRegister() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        let errors = [];\n        if (!_this2.isValid(_this2.orgname)) errors.push('Organization name');\n        if (!_this2.isValid(_this2.username)) errors.push('Username');\n        if (errors.length > 0) {\n          let msg = \"Invalid \" + errors.join(', ');\n          const toast = yield _this2.toastController.create({\n            message: msg,\n            duration: 3000,\n            cssClass: 'toast-error',\n            position: 'bottom'\n          });\n          toast.present();\n          return false;\n        }\n        // Destroy existing cached token.\n        yield BackgroundGeolocation.destroyTransistorAuthorizationToken(environment.TRACKER_HOST);\n        // Register device with tracker.transistorsoft.com to receive a JSON Web Token (JWT).\n        let token = yield BackgroundGeolocation.findOrCreateTransistorAuthorizationToken(_this2.orgname, _this2.username, environment.TRACKER_HOST);\n        yield BackgroundGeolocation.setConfig({\n          transistorAuthorizationToken: token\n        });\n        LocalStorage.setItem('orgname', _this2.orgname);\n        LocalStorage.setItem('username', _this2.username);\n        _this2.modalController.dismiss({\n          orgname: _this2.orgname,\n          username: _this2.username\n        });\n        return true;\n      })();\n    }\n    isValid(name) {\n      if (!name || name.length == 0) return false;\n      name = name.replace(/s+/, '');\n      return USERNAME_VALIDATOR.test(name);\n    }\n    onClickCancel() {\n      this.modalController.dismiss();\n    }\n  }\n  _class = RegistrationPage;\n  _class.ɵfac = function RegistrationPage_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i1.NavParams), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.Platform));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-registration\"]],\n    decls: 34,\n    vars: 5,\n    consts: [[\"color\", \"tertiary\"], [\"mode\", \"ios\", \"color\", \"dark\"], [\"slot\", \"start\"], [3, \"click\"], [\"name\", \"close\"], [\"slot\", \"end\"], [\"fill\", \"solid\", \"color\", \"primary\", 3, \"click\"], [\"scrollY\", \"\"], [2, \"padding\", \"10px\"], [1, \"devicename\"], [3, \"innerHTML\"], [\"color\", \"primary\", \"position\", \"stacked\"], [\"type\", \"url\", \"placeholder\", \"eg: Company name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"url\", \"placeholder\", \"eg: Github username or initials\", 3, \"ngModel\", \"ngModelChange\"], [\"text-wrap\", \"\"], [1, \"ion-text-wrap\"], [1, \"url\"]],\n    template: function RegistrationPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\", 1);\n        i0.ɵɵtext(3, \"Device Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 2)(5, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function RegistrationPage_Template_ion_button_click_5_listener() {\n          return ctx.onClickCancel();\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 5)(8, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function RegistrationPage_Template_ion_button_click_8_listener() {\n          return ctx.onClickRegister();\n        });\n        i0.ɵɵtext(9, \"Register\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"ion-content\", 7)(11, \"div\", 8)(12, \"ion-label\", 9);\n        i0.ɵɵelement(13, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 11);\n        i0.ɵɵtext(16, \"Organization name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrationPage_Template_ion_input_ngModelChange_17_listener($event) {\n          return ctx.orgname = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 11);\n        i0.ɵɵtext(20, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrationPage_Template_ion_input_ngModelChange_21_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"ion-card\")(23, \"ion-item\", 14)(24, \"ion-label\", 15);\n        i0.ɵɵtext(25, \" Please provide an Organization identifier and Username to register your device with the Demo Server. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"ion-item\", 14)(27, \"ion-label\");\n        i0.ɵɵtext(28, \" You will access your results at the url: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"ion-item\", 14)(30, \"ion-label\", 16);\n        i0.ɵɵelement(31, \"span\", 10);\n        i0.ɵɵtext(32, \"/\");\n        i0.ɵɵelement(33, \"span\", 10);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"innerHTML\", ctx.devicename, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orgname);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"innerHTML\", ctx.url, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"innerHTML\", ctx.orgname, i0.ɵɵsanitizeHtml);\n      }\n    },\n    dependencies: [i2.NgControlStatus, i2.NgModel, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonTitle, i1.IonToolbar, i1.TextValueAccessor],\n    styles: [\"ion-label.devicename[_ngcontent-%COMP%]{font-style:italic;font-weight:700;font-size:2rem;text-align:center}ion-card.card-md[_ngcontent-%COMP%]{margin-top:20px;border-radius:10px;padding-top:1.2rem}ion-card.card-md[_ngcontent-%COMP%]   ion-item.item-md[_ngcontent-%COMP%]{margin-bottom:1.2rem;min-height:inherit}ion-card.card-md[_ngcontent-%COMP%]   ion-item.item-md[_ngcontent-%COMP%]   ion-label.label-md[_ngcontent-%COMP%]{margin:0}ion-card.card-md[_ngcontent-%COMP%]   ion-item.item-md[_ngcontent-%COMP%]   ion-label.url[_ngcontent-%COMP%]{font-style:italic}\"]\n  });\n  return RegistrationPage;\n})();\nexport { RegistrationPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}