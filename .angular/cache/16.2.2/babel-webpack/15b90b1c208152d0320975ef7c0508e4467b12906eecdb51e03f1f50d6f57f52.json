{"ast":null,"code":"/**\n * Custom google-maps @event LongClick hack.\n */\nexport class LongPress {\n  constructor(map, maxTime) {\n    this.maxTime = maxTime;\n    this.map = map;\n    this.longPressTimer = undefined;\n    this.isLongPress = false;\n    google.maps.event.addListener(map, 'mousedown', e => {\n      this.onMouseDown(e);\n    });\n    google.maps.event.addListener(map, 'click', e => {\n      this.onMouseClick(e);\n    });\n    google.maps.event.addListener(map, 'mouseup', e => {\n      this.onMouseUp(e);\n    });\n    google.maps.event.addListener(map, 'drag', e => {\n      this.onMapDrag(e);\n    });\n  }\n  onMouseClick(e) {\n    this.clearTimer();\n    this.isLongPress = false;\n  }\n  onMouseUp(e) {\n    if (this.isLongPress && this.isDragging === false) {\n      google.maps.event.trigger(this.map, 'longpress', e);\n    }\n    this.clearTimer();\n  }\n  onMouseDown(e) {\n    this.clearTimer();\n    this.longPressTimer = setTimeout(() => {\n      this.isLongPress = true;\n      google.maps.event.trigger(this.map, 'longpresshold', e);\n    }, this.maxTime);\n    this.isDragging = false;\n  }\n  onMapDrag(e) {\n    if (this.isLongPress) {\n      google.maps.event.trigger(this.map, 'longpresscancel');\n    }\n    this.clearTimer();\n    this.isDragging = true;\n  }\n  clearTimer() {\n    this.isLongPress = false;\n    if (this.longPressTimer) {\n      clearTimeout(this.longPressTimer);\n      this.longPressTimer = undefined;\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}