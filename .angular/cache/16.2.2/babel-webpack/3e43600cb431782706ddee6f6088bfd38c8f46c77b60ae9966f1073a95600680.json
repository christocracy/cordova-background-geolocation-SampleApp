{"ast":null,"code":"import _asyncToGenerator from \"/Users/chris/workspace/background-geolocation/cordova/SampleApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport BackgroundGeolocation from \"../../cordova-background-geolocation\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\n//import { defaultLocationUrl, companyToken } from '../consoleConfig';\n/**\n* The collection of available BackgroundGeolocation settings\n*/\nconst SETTINGS = {\n  common: [\n  // Geolocation\n  {\n    name: 'desiredAccuracy',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [-2, -1, 0, 10, 100, 1000, 3000],\n    defaultValue: 0\n  }, {\n    name: 'distanceFilter',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 10, 50, 100, 1000],\n    defaultValue: 20\n  }, {\n    name: 'disableElasticity',\n    group: 'geolocation',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'elasticityMultiplier',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, 2, 3, 5, 10],\n    defaultValue: 1\n  }, {\n    name: 'geofenceProximityRadius',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [1000, 2500, 5000, 10000, 100000],\n    defaultValue: 1000\n  }, {\n    name: 'locationTimeout',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 5, 10, 30, 60],\n    defaultValue: 60\n  }, {\n    name: 'useSignificantChangesOnly',\n    group: 'geolocation',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'disableLocationAuthorizationAlert',\n    group: 'geolocation',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  },\n  // Activity Recognition\n  {\n    name: 'disableMotionActivityUpdates',\n    group: 'activity_recognition',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'disableStopDetection',\n    group: 'activity_recognition',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: false\n  },\n  // HTTP\n  {\n    name: 'url',\n    group: 'http',\n    ignore: true,\n    inputType: 'text',\n    dataType: 'string',\n    defaultValue: 'http://tracker.transistorsoft.com/locations/null'\n  }, {\n    name: 'method',\n    group: 'http',\n    inputType: 'select',\n    dataType: 'string',\n    values: ['POST', 'PUT'],\n    defaultValue: 'POST'\n  }, {\n    name: 'autoSync',\n    group: 'http',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'true'\n  }, {\n    name: 'disableAutoSyncOnCellular',\n    group: 'http',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: [true, false],\n    defaultValue: false\n  }, {\n    name: 'autoSyncThreshold',\n    group: 'http',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 5, 10, 25, 50, 100],\n    defaultValue: 0\n  }, {\n    name: 'batchSync',\n    group: 'http',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'maxBatchSize',\n    group: 'http',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [-1, 5, 10, 50, 100]\n  }, {\n    name: 'maxRecordsToPersist',\n    group: 'http',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [-1, 0, 1, 5, 10]\n  }, {\n    name: 'maxDaysToPersist',\n    group: 'http',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [1, 2, 3, 5, 7, 14],\n    defaultValue: 2\n  }, {\n    name: 'persistMode',\n    group: 'http',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [2, 1, -1, 0],\n    defaultValue: 2\n  },\n  // Application\n  {\n    name: 'stopOnTerminate',\n    group: 'application',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'true'\n  }, {\n    name: 'startOnBoot',\n    group: 'application',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'stopTimeout',\n    group: 'activity_recognition',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, 3, 5, 10, 15],\n    defaultValue: 1\n  }, {\n    name: 'heartbeatInterval',\n    group: 'application',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [-1, 60, 2 * 60, 5 * 60, 15 * 60],\n    defaultValue: 60\n  },\n  // Logging & Debug\n  {\n    name: 'debug',\n    group: 'debug',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'true'\n  }, {\n    name: 'logLevel',\n    group: 'debug',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, 2, 3, 4, 5],\n    defaultValue: 5\n  }, {\n    name: 'logMaxDays',\n    group: 'debug',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, 2, 3, 4, 5, 6, 7],\n    defaultValue: 5\n  }],\n  iOS: [\n  // Geolocation\n  {\n    name: 'stationaryRadius',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [25, 50, 100, 500, 1000],\n    defaultValue: 25\n  }, {\n    name: 'activityType',\n    group: 'geolocation',\n    dataType: 'string',\n    inputType: 'select',\n    values: ['Other', 'AutomotiveNavigation', 'Fitness', 'OtherNavigation'],\n    defaultValue: 'OtherNavigation'\n  },\n  // Activity Recognition\n  {\n    name: 'stopDetectionDelay',\n    group: 'activity_recognition',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, 2, 5],\n    defaultValue: 0\n  }, {\n    name: 'preventSuspend',\n    group: 'application',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'showsBackgroundLocationIndicator',\n    group: 'geolocation',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: [true, false],\n    defaultValue: false\n  }],\n  Android: [\n  // Geolocation\n  {\n    name: 'locationUpdateInterval',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1000, 5000, 10000, 30000, 60000],\n    defaultValue: 5000\n  }, {\n    name: 'fastestLocationUpdateInterval',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [-1, 0, 1000, 5000, 10000, 30000, 60000],\n    defaultValue: -1\n  }, {\n    name: 'deferTime',\n    group: 'geolocation',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 10 * 1000, 30 * 1000, 60 * 1000, 10 * 60 * 1000],\n    defaultValue: 0\n  }, {\n    name: 'geofenceModeHighAccuracy',\n    group: 'geolocation',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    value: [true, false],\n    defaultValue: false\n  },\n  // Activity Recognition\n  {\n    name: 'motionTriggerDelay',\n    group: 'activity_recognition',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 10000, 30000, 60000],\n    defaultValue: 0\n  }, {\n    name: 'triggerActivities',\n    group: 'activity_recognition',\n    dataType: 'string',\n    inputType: 'select',\n    multiple: true,\n    values: ['in_vehicle', 'on_bicycle', 'on_foot', 'running', 'walking'],\n    defaultValue: 'in_vehicle, on_bicycle, running, walking, on_foot'\n  },\n  // Application\n  {\n    name: 'enableHeadless',\n    group: 'application',\n    dataType: 'boolean',\n    inputType: 'toggle',\n    values: ['true', 'false'],\n    defaultValue: 'false'\n  }, {\n    name: 'notificationPriority',\n    ignore: true,\n    group: 'application',\n    dataType: 'integer',\n    inputType: 'select',\n    values: [0, 1, -1, 2, -2],\n    defaultValue: 0\n  }]\n};\n/**\n* A collection of soundId for use with BackgroundGeolocation#playSound\n*/\nconst SOUND_MAP = {\n  \"iOS\": {\n    \"LONG_PRESS_ACTIVATE\": 1113,\n    \"LONG_PRESS_CANCEL\": 1075,\n    \"ADD_GEOFENCE\": 1114,\n    \"BUTTON_CLICK\": 1104,\n    \"MESSAGE_SENT\": 1303,\n    \"ERROR\": 1006,\n    \"OPEN\": 1502,\n    \"CLOSE\": 1503,\n    \"FLOURISH\": 1509,\n    \"TEST_MODE_CLICK\": 1130,\n    \"TEST_MODE_SUCCESS\": 1114\n  },\n  \"Android\": {\n    \"LONG_PRESS_ACTIVATE\": \"DOT_START\",\n    \"LONG_PRESS_CANCEL\": \"DOT_STOP\",\n    \"ADD_GEOFENCE\": \"DOT_SUCCESS\",\n    \"BUTTON_CLICK\": \"BUTTON_CLICK\",\n    \"MESSAGE_SENT\": \"WHOO_SEND_SHARE\",\n    \"ERROR\": \"ERROR\",\n    \"OPEN\": \"OPEN\",\n    \"CLOSE\": \"CLOSE\",\n    \"FLOURISH\": \"POP_OPEN\",\n    \"TEST_MODE_CLICK\": \"POP\",\n    \"TEST_MODE_SUCCESS\": \"BEEP_ON\"\n  },\n  \"browser\": {\n    \"LONG_PRESS_ACTIVATE\": 1,\n    \"LONG_PRESS_CANCEL\": 1,\n    \"ADD_GEOFENCE\": 1,\n    \"BUTTON_CLICK\": 1,\n    \"MESSAGE_SENT\": 1,\n    \"ERROR\": 1,\n    \"OPEN\": 1,\n    \"CLOSE\": 1,\n    \"FLOURISH\": 1\n  }\n};\nlet BGService = /*#__PURE__*/(() => {\n  var _class;\n  class BGService {\n    constructor(platform) {\n      this.platform = platform;\n      this.platform.ready().then(this.init.bind(this));\n    }\n    init() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.deviceInfo = yield BackgroundGeolocation.getDeviceInfo();\n        // Build a collection of available settings by platform for use on the Settings screen\n        let platform = _this.deviceInfo.platform || 'iOS';\n        if (platform === 'browser') {\n          platform = 'Android';\n        }\n        var settings = [].concat(SETTINGS.common).concat(SETTINGS[platform]);\n        _this.settings = {\n          list: settings,\n          map: {}\n        };\n        for (var n = 0, len = settings.length; n < len; n++) {\n          var setting = settings[n];\n          _this.settings.map[setting.name] = setting;\n        }\n        ;\n      })();\n    }\n    /**\n    * Return Array of all settings by platform\n    */\n    getSettings() {\n      return this.settings.list;\n    }\n    getPlatformSettings(group) {\n      let settings = [];\n      this.settings.list.forEach(setting => {\n        if (setting.group === group && !setting.ignore) {\n          settings.push(setting);\n        }\n      });\n      return settings;\n    }\n    /**\n    * Set a BackgroundGeolocation config option\n    * @param {String} name\n    * @param {Mixed} value\n    */\n    set(name, value, callback) {\n      console.log('BGService#set ', name, value);\n      var setting = this.settings.map[name];\n      if (!setting) {\n        // No change:  Ignore\n        console.info('ignored');\n        return;\n      }\n      // Type-casting String from form-field value\n      switch (setting.dataType) {\n        case 'integer':\n          value = parseInt(value, 10);\n          break;\n        case 'boolean':\n          value = typeof value === 'string' ? value === 'true' : value;\n          break;\n      }\n      this.playSound('BUTTON_CLICK');\n      // Create config {} for BackgroundGeolocation\n      var config = {};\n      config[name] = value;\n      BackgroundGeolocation.setConfig(config, state => {\n        /* TODO\n        this.events.publish('change', name, value);\n        if (typeof(callback) == 'function') {\n          callback(state);\n        }\n        */\n      });\n    }\n    /**\n    * Subscribe to BGService events\n    */\n    on(event, callback) {\n      /**\n      TODO\n           this.events.subscribe(event, callback);\n      */\n    }\n    getOptionsForSetting(name) {\n      const setting = this.settings.map[name];\n      if (!setting) {\n        console.warn('Unknown option: ', name);\n        return [];\n      } else {\n        return setting.values;\n      }\n    }\n    getSetting(name) {\n      return this.settings.map[name];\n    }\n    playSound(name) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        let soundId = 0;\n        if (typeof name === 'string') {\n          soundId = SOUND_MAP[_this2.deviceInfo.platform][name];\n        } else if (typeof name === 'number') {\n          soundId = name;\n        }\n        if (!soundId) {\n          alert('Invalid sound id provided to BGService#playSound' + name);\n          return;\n        }\n        BackgroundGeolocation.playSound(soundId);\n      })();\n    }\n    /**\n    * Returns an array of locations for iOS Simulator City Drive Route\n    * @return {Array}\n    */\n    getCityDriveData() {\n      return [{\n        \"lat\": 37.33527476,\n        \"lng\": -122.03254703\n      }, {\n        \"lat\": 37.33500926,\n        \"lng\": -122.03272188\n      }, {\n        \"lat\": 37.33467638,\n        \"lng\": -122.03432425\n      }, {\n        \"lat\": 37.33453849,\n        \"lng\": -122.03695223\n      }, {\n        \"lat\": 37.33447068,\n        \"lng\": -122.04007348\n      }, {\n        \"lat\": 37.33446146,\n        \"lng\": -122.04380955\n      }, {\n        \"lat\": 37.33426985,\n        \"lng\": -122.04751058\n      }, {\n        \"lat\": 37.33352458,\n        \"lng\": -122.05100549\n      }, {\n        \"lat\": 37.33275353,\n        \"lng\": -122.05462472\n      }, {\n        \"lat\": 37.33228724,\n        \"lng\": -122.05833354\n      }, {\n        \"lat\": 37.33307736,\n        \"lng\": -122.06203541\n      }, {\n        \"lat\": 37.33422447,\n        \"lng\": -122.06562781\n      }, {\n        \"lat\": 37.33435661,\n        \"lng\": -122.06939204\n      }, {\n        \"lat\": 37.33369775,\n        \"lng\": -122.07309474\n      }, {\n        \"lat\": 37.33368006,\n        \"lng\": -122.07665613\n      }, {\n        \"lat\": 37.33492184,\n        \"lng\": -122.07997503\n      }, {\n        \"lat\": 37.3370055,\n        \"lng\": -122.0827595\n      }, {\n        \"lat\": 37.33879885,\n        \"lng\": -122.08577472\n      }, {\n        \"lat\": 37.34046597,\n        \"lng\": -122.08886286\n      }, {\n        \"lat\": 37.34208941,\n        \"lng\": -122.09195687\n      }, {\n        \"lat\": 37.34415677,\n        \"lng\": -122.09439031\n      }, {\n        \"lat\": 37.34576798,\n        \"lng\": -122.09727888\n      }, {\n        \"lat\": 37.34719244,\n        \"lng\": -122.1006624\n      }, {\n        \"lat\": 37.34894824,\n        \"lng\": -122.1036539\n      }, {\n        \"lat\": 37.35145376,\n        \"lng\": -122.10569934\n      }, {\n        \"lat\": 37.35357644,\n        \"lng\": -122.10818206\n      }, {\n        \"lat\": 37.35478615,\n        \"lng\": -122.11144128\n      }, {\n        \"lat\": 37.35583234,\n        \"lng\": -122.11484701\n      }, {\n        \"lat\": 37.35772158,\n        \"lng\": -122.11764607\n      }, {\n        \"lat\": 37.36040727,\n        \"lng\": -122.11952001\n      }, {\n        \"lat\": 37.36303768,\n        \"lng\": -122.12160442\n      }, {\n        \"lat\": 37.36457081,\n        \"lng\": -122.12476867\n      }, {\n        \"lat\": 37.36489536,\n        \"lng\": -122.12851823\n      }, {\n        \"lat\": 37.36543834,\n        \"lng\": -122.13217241\n      }, {\n        \"lat\": 37.3664761,\n        \"lng\": -122.13564763\n      }, {\n        \"lat\": 37.36776176,\n        \"lng\": -122.13898061\n      }, {\n        \"lat\": 37.36994839,\n        \"lng\": -122.1416339\n      }, {\n        \"lat\": 37.37240005,\n        \"lng\": -122.14386038\n      }, {\n        \"lat\": 37.37481249,\n        \"lng\": -122.14611939\n      }, {\n        \"lat\": 37.37709618,\n        \"lng\": -122.14869624\n      }, {\n        \"lat\": 37.37961188,\n        \"lng\": -122.15082139\n      }, {\n        \"lat\": 37.3826398,\n        \"lng\": -122.15178036\n      }, {\n        \"lat\": 37.38560981,\n        \"lng\": -122.15272559\n      }, {\n        \"lat\": 37.38774539,\n        \"lng\": -122.15510789\n      }, {\n        \"lat\": 37.38869141,\n        \"lng\": -122.15849049\n      }, {\n        \"lat\": 37.38931302,\n        \"lng\": -122.16207476\n      }, {\n        \"lat\": 37.39081987,\n        \"lng\": -122.1652427\n      }, {\n        \"lat\": 37.39210109,\n        \"lng\": -122.16863067\n      }, {\n        \"lat\": 37.39242056,\n        \"lng\": -122.17227965\n      }, {\n        \"lat\": 37.39361482,\n        \"lng\": -122.17556879\n      }, {\n        \"lat\": 37.39578711,\n        \"lng\": -122.17805511\n      }, {\n        \"lat\": 37.39821434,\n        \"lng\": -122.18044236\n      }, {\n        \"lat\": 37.40071157,\n        \"lng\": -122.18290622\n      }, {\n        \"lat\": 37.40313012,\n        \"lng\": -122.18535374\n      }, {\n        \"lat\": 37.40549529,\n        \"lng\": -122.18774837\n      }, {\n        \"lat\": 37.40759705,\n        \"lng\": -122.19035128\n      }, {\n        \"lat\": 37.40890928,\n        \"lng\": -122.19364872\n      }, {\n        \"lat\": 37.41002813,\n        \"lng\": -122.19717013\n      }, {\n        \"lat\": 37.4111682,\n        \"lng\": -122.20078524\n      }, {\n        \"lat\": 37.41233794,\n        \"lng\": -122.20442475\n      }, {\n        \"lat\": 37.41363889,\n        \"lng\": -122.20791833\n      }, {\n        \"lat\": 37.41583072,\n        \"lng\": -122.2106204\n      }, {\n        \"lat\": 37.41782917,\n        \"lng\": -122.21338064\n      }, {\n        \"lat\": 37.41872658,\n        \"lng\": -122.21683566\n      }, {\n        \"lat\": 37.41935866,\n        \"lng\": -122.22058933\n      }, {\n        \"lat\": 37.4209964,\n        \"lng\": -122.22388736\n      }, {\n        \"lat\": 37.42303224,\n        \"lng\": -122.22680837\n      }, {\n        \"lat\": 37.42510651,\n        \"lng\": -122.22979057\n      }, {\n        \"lat\": 37.42738525,\n        \"lng\": -122.23260102\n      }, {\n        \"lat\": 37.42942843,\n        \"lng\": -122.23549663\n      }, {\n        \"lat\": 37.4313864,\n        \"lng\": -122.23829728\n      }, {\n        \"lat\": 37.43354365,\n        \"lng\": -122.24095367\n      }, {\n        \"lat\": 37.4357105,\n        \"lng\": -122.24350931\n      }, {\n        \"lat\": 37.4378918,\n        \"lng\": -122.24613695\n      }, {\n        \"lat\": 37.44000262,\n        \"lng\": -122.24876996\n      }, {\n        \"lat\": 37.44207177,\n        \"lng\": -122.25146784\n      }, {\n        \"lat\": 37.44364246,\n        \"lng\": -122.25458952\n      }, {\n        \"lat\": 37.44423451,\n        \"lng\": -122.25815644\n      }, {\n        \"lat\": 37.44401797,\n        \"lng\": -122.26182293\n      }, {\n        \"lat\": 37.44381697,\n        \"lng\": -122.26544651\n      }, {\n        \"lat\": 37.4444387,\n        \"lng\": -122.26900388\n      }, {\n        \"lat\": 37.44598499,\n        \"lng\": -122.27225807\n      }, {\n        \"lat\": 37.44805758,\n        \"lng\": -122.27523289\n      }, {\n        \"lat\": 37.45014137,\n        \"lng\": -122.27827786\n      }, {\n        \"lat\": 37.45213903,\n        \"lng\": -122.28131706\n      }, {\n        \"lat\": 37.45408782,\n        \"lng\": -122.28428358\n      }, {\n        \"lat\": 37.45607437,\n        \"lng\": -122.28728422\n      }, {\n        \"lat\": 37.45855399,\n        \"lng\": -122.28964389\n      }, {\n        \"lat\": 37.46150337,\n        \"lng\": -122.29066665\n      }, {\n        \"lat\": 37.46449927,\n        \"lng\": -122.29080537\n      }, {\n        \"lat\": 37.46741706,\n        \"lng\": -122.29164222\n      }, {\n        \"lat\": 37.47004943,\n        \"lng\": -122.29347317\n      }, {\n        \"lat\": 37.4724045,\n        \"lng\": -122.29584441\n      }, {\n        \"lat\": 37.47484795,\n        \"lng\": -122.29807718\n      }, {\n        \"lat\": 37.47775391,\n        \"lng\": -122.29919189\n      }, {\n        \"lat\": 37.48081016,\n        \"lng\": -122.29901151\n      }, {\n        \"lat\": 37.48386847,\n        \"lng\": -122.29850608\n      }, {\n        \"lat\": 37.4868127,\n        \"lng\": -122.2981216\n      }, {\n        \"lat\": 37.48974125,\n        \"lng\": -122.29883038\n      }, {\n        \"lat\": 37.49226793,\n        \"lng\": -122.30073474\n      }, {\n        \"lat\": 37.49413538,\n        \"lng\": -122.3036213\n      }, {\n        \"lat\": 37.4951695,\n        \"lng\": -122.30711999\n      }, {\n        \"lat\": 37.49605031,\n        \"lng\": -122.31058583\n      }, {\n        \"lat\": 37.49739544,\n        \"lng\": -122.3138981\n      }, {\n        \"lat\": 37.49913263,\n        \"lng\": -122.31702405\n      }, {\n        \"lat\": 37.50040366,\n        \"lng\": -122.32036315\n      }, {\n        \"lat\": 37.50083658,\n        \"lng\": -122.32388539\n      }, {\n        \"lat\": 37.50117039,\n        \"lng\": -122.32749548\n      }, {\n        \"lat\": 37.50237035,\n        \"lng\": -122.33083005\n      }, {\n        \"lat\": 37.50420426,\n        \"lng\": -122.33381577\n      }, {\n        \"lat\": 37.50606869,\n        \"lng\": -122.33688933\n      }, {\n        \"lat\": 37.50799594,\n        \"lng\": -122.34003061\n      }, {\n        \"lat\": 37.50988405,\n        \"lng\": -122.34301482\n      }, {\n        \"lat\": 37.51203087,\n        \"lng\": -122.34564414\n      }, {\n        \"lat\": 37.51425798,\n        \"lng\": -122.34819157\n      }, {\n        \"lat\": 37.51644813,\n        \"lng\": -122.35068376\n      }, {\n        \"lat\": 37.51869146,\n        \"lng\": -122.35307638\n      }, {\n        \"lat\": 37.52133683,\n        \"lng\": -122.35490229\n      }, {\n        \"lat\": 37.52404792,\n        \"lng\": -122.35651279\n      }, {\n        \"lat\": 37.52656144,\n        \"lng\": -122.35869996\n      }, {\n        \"lat\": 37.52949012,\n        \"lng\": -122.36013184\n      }, {\n        \"lat\": 37.53245962,\n        \"lng\": -122.36139139\n      }, {\n        \"lat\": 37.53535502,\n        \"lng\": -122.36269562\n      }, {\n        \"lat\": 37.53806531,\n        \"lng\": -122.36427066\n      }, {\n        \"lat\": 37.54071957,\n        \"lng\": -122.36586045\n      }, {\n        \"lat\": 37.54319399,\n        \"lng\": -122.36775116\n      }, {\n        \"lat\": 37.54551481,\n        \"lng\": -122.37012089\n      }, {\n        \"lat\": 37.54781925,\n        \"lng\": -122.37250714\n      }, {\n        \"lat\": 37.55009393,\n        \"lng\": -122.37486312\n      }, {\n        \"lat\": 37.55254949,\n        \"lng\": -122.37717024\n      }, {\n        \"lat\": 37.55541199,\n        \"lng\": -122.37918458\n      }, {\n        \"lat\": 37.55818716,\n        \"lng\": -122.38106338\n      }, {\n        \"lat\": 37.56068828,\n        \"lng\": -122.38341593\n      }, {\n        \"lat\": 37.56314841,\n        \"lng\": -122.38588298\n      }, {\n        \"lat\": 37.56541169,\n        \"lng\": -122.38835698\n      }, {\n        \"lat\": 37.56674169,\n        \"lng\": -122.39169239\n      }, {\n        \"lat\": 37.5685417,\n        \"lng\": -122.39470024\n      }, {\n        \"lat\": 37.57095669,\n        \"lng\": -122.39698791\n      }, {\n        \"lat\": 37.57337626,\n        \"lng\": -122.39928572\n      }, {\n        \"lat\": 37.57613294,\n        \"lng\": -122.40094584\n      }, {\n        \"lat\": 37.57901078,\n        \"lng\": -122.4022173\n      }, {\n        \"lat\": 37.58156135,\n        \"lng\": -122.40405955\n      }, {\n        \"lat\": 37.58410689,\n        \"lng\": -122.40616551\n      }, {\n        \"lat\": 37.58628103,\n        \"lng\": -122.40888284\n      }, {\n        \"lat\": 37.58845823,\n        \"lng\": -122.41162422\n      }, {\n        \"lat\": 37.59089234,\n        \"lng\": -122.41402865\n      }, {\n        \"lat\": 37.5933155,\n        \"lng\": -122.41641054\n      }, {\n        \"lat\": 37.59572459,\n        \"lng\": -122.41875689\n      }, {\n        \"lat\": 37.59795493,\n        \"lng\": -122.42134262\n      }, {\n        \"lat\": 37.60011457,\n        \"lng\": -122.42399767\n      }, {\n        \"lat\": 37.60240224,\n        \"lng\": -122.4265399\n      }, {\n        \"lat\": 37.60520008,\n        \"lng\": -122.42789551\n      }, {\n        \"lat\": 37.60813618,\n        \"lng\": -122.42777573\n      }, {\n        \"lat\": 37.61097345,\n        \"lng\": -122.42659053\n      }, {\n        \"lat\": 37.61359414,\n        \"lng\": -122.42477627\n      }, {\n        \"lat\": 37.61652164,\n        \"lng\": -122.42409633\n      }, {\n        \"lat\": 37.61941491,\n        \"lng\": -122.42515597\n      }, {\n        \"lat\": 37.62223282,\n        \"lng\": -122.42696981\n      }, {\n        \"lat\": 37.62499411,\n        \"lng\": -122.42876044\n      }, {\n        \"lat\": 37.62751237,\n        \"lng\": -122.43105867\n      }, {\n        \"lat\": 37.62961128,\n        \"lng\": -122.43380726\n      }, {\n        \"lat\": 37.63173002,\n        \"lng\": -122.43652912\n      }, {\n        \"lat\": 37.63434333,\n        \"lng\": -122.43855737\n      }, {\n        \"lat\": 37.63721702,\n        \"lng\": -122.43994642\n      }, {\n        \"lat\": 37.63973671,\n        \"lng\": -122.44194609\n      }, {\n        \"lat\": 37.64209642,\n        \"lng\": -122.44410611\n      }, {\n        \"lat\": 37.6439212,\n        \"lng\": -122.44706014\n      }, {\n        \"lat\": 37.64593185,\n        \"lng\": -122.44975467\n      }, {\n        \"lat\": 37.64856629,\n        \"lng\": -122.45139107\n      }, {\n        \"lat\": 37.65116761,\n        \"lng\": -122.45299486\n      }, {\n        \"lat\": 37.65334007,\n        \"lng\": -122.45534515\n      }, {\n        \"lat\": 37.65538199,\n        \"lng\": -122.45796869\n      }, {\n        \"lat\": 37.65749297,\n        \"lng\": -122.4606685\n      }, {\n        \"lat\": 37.6595944,\n        \"lng\": -122.46334517\n      }, {\n        \"lat\": 37.66213336,\n        \"lng\": -122.46529514\n      }, {\n        \"lat\": 37.66513186,\n        \"lng\": -122.46553863\n      }, {\n        \"lat\": 37.6681835,\n        \"lng\": -122.46560385\n      }, {\n        \"lat\": 37.67115958,\n        \"lng\": -122.46650842\n      }, {\n        \"lat\": 37.6737871,\n        \"lng\": -122.46830709\n      }, {\n        \"lat\": 37.67626076,\n        \"lng\": -122.47032856\n      }, {\n        \"lat\": 37.67888283,\n        \"lng\": -122.47161778\n      }, {\n        \"lat\": 37.681853,\n        \"lng\": -122.47152482\n      }, {\n        \"lat\": 37.6847816,\n        \"lng\": -122.47134126\n      }, {\n        \"lat\": 37.6876731,\n        \"lng\": -122.47090381\n      }, {\n        \"lat\": 37.69061264,\n        \"lng\": -122.47027005\n      }, {\n        \"lat\": 37.69348641,\n        \"lng\": -122.47026259\n      }, {\n        \"lat\": 37.69632218,\n        \"lng\": -122.47076182\n      }, {\n        \"lat\": 37.69914914,\n        \"lng\": -122.47129566\n      }, {\n        \"lat\": 37.70201202,\n        \"lng\": -122.47133229\n      }, {\n        \"lat\": 37.70486296,\n        \"lng\": -122.47116624\n      }, {\n        \"lat\": 37.70741441,\n        \"lng\": -122.4695213\n      }, {\n        \"lat\": 37.70957963,\n        \"lng\": -122.46701645\n      }, {\n        \"lat\": 37.71043642,\n        \"lng\": -122.46355472\n      }, {\n        \"lat\": 37.71046027,\n        \"lng\": -122.45988294\n      }, {\n        \"lat\": 37.71069928,\n        \"lng\": -122.45637822\n      }, {\n        \"lat\": 37.71224348,\n        \"lng\": -122.45340591\n      }, {\n        \"lat\": 37.71448702,\n        \"lng\": -122.45078271\n      }, {\n        \"lat\": 37.71693873,\n        \"lng\": -122.44871305\n      }, {\n        \"lat\": 37.71990228,\n        \"lng\": -122.44822204\n      }, {\n        \"lat\": 37.72291888,\n        \"lng\": -122.44775048\n      }, {\n        \"lat\": 37.72576768,\n        \"lng\": -122.44632572\n      }, {\n        \"lat\": 37.72805372,\n        \"lng\": -122.44386563\n      }, {\n        \"lat\": 37.72953195,\n        \"lng\": -122.44070582\n      }, {\n        \"lat\": 37.7307498,\n        \"lng\": -122.43723772\n      }, {\n        \"lat\": 37.73174796,\n        \"lng\": -122.43356938\n      }, {\n        \"lat\": 37.73216621,\n        \"lng\": -122.42992443\n      }, {\n        \"lat\": 37.73150681,\n        \"lng\": -122.42617839\n      }, {\n        \"lat\": 37.73152823,\n        \"lng\": -122.42250586\n      }, {\n        \"lat\": 37.73190474,\n        \"lng\": -122.4188029\n      }, {\n        \"lat\": 37.73208047,\n        \"lng\": -122.4151556\n      }, {\n        \"lat\": 37.73335846,\n        \"lng\": -122.41185347\n      }, {\n        \"lat\": 37.73467442,\n        \"lng\": -122.40896246\n      }, {\n        \"lat\": 37.7367644,\n        \"lng\": -122.40753804\n      }, {\n        \"lat\": 37.73918836,\n        \"lng\": -122.40786326\n      }, {\n        \"lat\": 37.74134411,\n        \"lng\": -122.40745439\n      }, {\n        \"lat\": 37.7433128,\n        \"lng\": -122.40606023\n      }, {\n        \"lat\": 37.7454038,\n        \"lng\": -122.40480714\n      }, {\n        \"lat\": 37.74791032,\n        \"lng\": -122.40401446\n      }, {\n        \"lat\": 37.75036492,\n        \"lng\": -122.40324249\n      }, {\n        \"lat\": 37.7530224,\n        \"lng\": -122.40280453\n      }, {\n        \"lat\": 37.75548823,\n        \"lng\": -122.40305884\n      }, {\n        \"lat\": 37.75750915,\n        \"lng\": -122.40390315\n      }, {\n        \"lat\": 37.75912761,\n        \"lng\": -122.40587398\n      }, {\n        \"lat\": 37.76147723,\n        \"lng\": -122.40613148\n      }];\n    }\n  }\n  _class = BGService;\n  _class.ɵfac = function BGService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.Platform));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return BGService;\n})();\nexport { BGService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}