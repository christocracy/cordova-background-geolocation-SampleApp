{"ast":null,"code":"import _asyncToGenerator from \"/Users/chris/workspace/background-geolocation/cordova/SampleApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _registerTransistor, _registerTransistorAuthorizationListener;\nconst LocalStorage = window.localStorage;\nimport BackgroundGeolocation from \"../cordova-background-geolocation\";\nimport { environment } from \"../../environments/environment\";\n/// Keep a reference to onHttp subscription.\nlet onHttpSubscription;\nexport function registerTransistor() {\n  return (_registerTransistor = _registerTransistor || _asyncToGenerator(function* () {\n    LocalStorage.getItem('orgname');\n    LocalStorage.getItem('username');\n    const orgname = null;\n    const username = null;\n    if (orgname == null || username == null) {\n      //this.navCtrl.setRoot('HomePage');\n      return {\n        accessToken: \"DUMMY_TOKEN\",\n        refreshToken: \"DUMMY_TOKEN\",\n        expires: -1,\n        url: ''\n      };\n    }\n    const token = yield BackgroundGeolocation.findOrCreateTransistorAuthorizationToken(orgname, username, environment.TRACKER_HOST);\n    yield BackgroundGeolocation.setConfig({\n      transistorAuthorizationToken: token\n    });\n    return token;\n  })).apply(this, arguments);\n}\nexport function registerTransistorAuthorizationListener(_x) {\n  return (_registerTransistorAuthorizationListener = _registerTransistorAuthorizationListener || _asyncToGenerator(function* (router) {\n    var _ref;\n    if (onHttpSubscription) {\n      onHttpSubscription.remove();\n    }\n    onHttpSubscription = BackgroundGeolocation.onHttp(function (_x2) {\n      return (_ref = _ref || _asyncToGenerator(function* (event) {\n        console.log('[Authorization onHttp]');\n        switch (event.status) {\n          case 403:\n          case 406:\n            yield BackgroundGeolocation.destroyTransistorAuthorizationToken(environment.TRACKER_HOST);\n            const token = yield registerTransistor();\n            if (token.accessToken !== 'DUMMY_TOKEN') {\n              yield BackgroundGeolocation.setConfig({\n                transistorAuthorizationToken: token\n              });\n              BackgroundGeolocation.sync();\n            }\n            break;\n          case 410:\n            LocalStorage.removeItem('username');\n            router.navigate(['/home']);\n            break;\n        }\n      })).apply(this, arguments);\n    });\n  })).apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}